{"ast":null,"code":"export default function dataURItoBlob(dataURI){// convert base64/URLEncoded data component to raw binary data held in a string\nvar byteString;if(dataURI.split(\",\")[0].indexOf(\"base64\")>=0)byteString=atob(dataURI.split(\",\")[1]);else byteString=unescape(dataURI.split(\",\")[1]);// separate out the mime component\nvar mimeString=dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];// write the bytes of the string to a typed array\nvar ia=new Uint8Array(byteString.length);for(var i=0;i<byteString.length;i++){ia[i]=byteString.charCodeAt(i);}return new Blob([ia],{type:mimeString});}","map":{"version":3,"sources":["/Users/jasonaviles/Desktop/facebook/starter/frontendssmedia/src/helpers/dataURItoBlob.js"],"names":["dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","type"],"mappings":"AAAA,cAAe,SAASA,CAAAA,aAAT,CAAuBC,OAAvB,CAAgC,CAC7C;AACA,GAAIC,CAAAA,UAAJ,CACA,GAAID,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,QAA9B,GAA2C,CAA/C,CACEF,UAAU,CAAGG,IAAI,CAACJ,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAjB,CADF,IAEKD,CAAAA,UAAU,CAAGI,QAAQ,CAACL,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAArB,CAEL;AACA,GAAII,CAAAA,UAAU,CAAGN,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAjB,CAEA;AACA,GAAIK,CAAAA,EAAE,CAAG,GAAIC,CAAAA,UAAJ,CAAeP,UAAU,CAACQ,MAA1B,CAAT,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGT,UAAU,CAACQ,MAA/B,CAAuCC,CAAC,EAAxC,CAA4C,CAC1CH,EAAE,CAACG,CAAD,CAAF,CAAQT,UAAU,CAACU,UAAX,CAAsBD,CAAtB,CAAR,CACD,CAED,MAAO,IAAIE,CAAAA,IAAJ,CAAS,CAACL,EAAD,CAAT,CAAe,CAAEM,IAAI,CAAEP,UAAR,CAAf,CAAP,CACD","sourcesContent":["export default function dataURItoBlob(dataURI) {\r\n  // convert base64/URLEncoded data component to raw binary data held in a string\r\n  var byteString;\r\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0)\r\n    byteString = atob(dataURI.split(\",\")[1]);\r\n  else byteString = unescape(dataURI.split(\",\")[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n\r\n  // write the bytes of the string to a typed array\r\n  var ia = new Uint8Array(byteString.length);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n    ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return new Blob([ia], { type: mimeString });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}